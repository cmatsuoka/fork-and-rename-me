From 72c80bffbc843f49df792430da4befcfa4f8f83a Mon Sep 17 00:00:00 2001
From: David Griffith <dave@661.org>
Date: Wed, 3 May 2017 13:03:10 -0700
Subject: [PATCH 47/68] Fix off-by-one in smoothing code and use better
 interpolation/rounding.

This is from xv-erling-jacobsen-20080225-smoothing-crash-fix.diff

Patch by Erling A. Jacobsen <linuxcub@email.dk>
Fixes off-by-one error that could cause crashes
and uses a better way of interpolating/rounding
that ensures, I think, that all the data will
be taken into account when averaging pixels.
---
 xvsmooth.c | 35 ++++++++++++++++++-----------------
 1 file changed, 18 insertions(+), 17 deletions(-)

diff --git a/xvsmooth.c b/xvsmooth.c
index bff73bb..c8e4943 100644
--- a/xvsmooth.c
+++ b/xvsmooth.c
@@ -254,7 +254,7 @@ int   is24, swide, shigh, dwide, dhigh;
   bperpix = (is24) ? 3 : 1;
 
   for (j=0; j<=swide; j++)
-    pixarr[j] = (j*dwide + (15*swide)/16) / swide;
+    pixarr[j] = ((2 * j + 1 ) * dwide) / ( 2 * swide);
 
   cptr = pic824;  cptr1 = cptr + swide * bperpix;
 
@@ -375,20 +375,6 @@ int   is24, swide, shigh, dwide, dhigh;
 
     thisline = (i * dhigh + (15*shigh)/16) / shigh;
 
-    if (thisline != lastline) {  /* copy a line to pic24 */
-      for (j=0; j<dwide; j++) {
-	*pic24++ = lbufR[j] / linecnt;
-	*pic24++ = lbufG[j] / linecnt;
-	*pic24++ = lbufB[j] / linecnt;
-      }
-
-      xvbzero( (char *) lbufR, dwide * sizeof(int));  /* clear out line bufs */
-      xvbzero( (char *) lbufG, dwide * sizeof(int));
-      xvbzero( (char *) lbufB, dwide * sizeof(int));
-      linecnt = 0;  lastline = thisline;
-    }
-
-
     for (j=0, cxptr=cxarr; j<dwide; j++, cxptr++) {
       cptr  = clptr + *cxptr * bperpix;
       if (*cxptr < swide-1) cptr1 = cptr + 1*bperpix;
@@ -407,6 +393,21 @@ int   is24, swide, shigh, dwide, dhigh;
     }
 
     linecnt++;
+
+    thisline = ((2 * i + 3) * dhigh) / (2 * shigh);
+
+    if (thisline != lastline) {  /* copy a line to pic24 */
+      for (j=0; j<dwide; j++) {
+       *pic24++ = lbufR[j] / linecnt;
+       *pic24++ = lbufG[j] / linecnt;
+       *pic24++ = lbufB[j] / linecnt;
+      }
+
+      xvbzero( (char *) lbufR, dwide * sizeof(int));  /* clear out line bufs */
+      xvbzero( (char *) lbufG, dwide * sizeof(int));
+      xvbzero( (char *) lbufB, dwide * sizeof(int));
+      linecnt = 0;  lastline = thisline;
+    }
   }
 
 
@@ -463,7 +464,7 @@ int   is24, swide, shigh, dwide, dhigh;
   bperpix = (is24) ? 3 : 1;
 
   for (j=0; j<=swide; j++)
-    pixarr[j] = (j*dwide + (15*swide)/16) / swide;
+    pixarr[j] = ((2 * j + 1) * dwide) / (2 * swide);
 
   lastline = linecnt = pixR = pixG = pixB = 0;
   cptr = pic824;
@@ -472,7 +473,7 @@ int   is24, swide, shigh, dwide, dhigh;
     ProgressMeter(0, shigh, i, "Smooth");
     if ((i&15) == 0) WaitCursor();
 
-    thisline = (i * dhigh + (15*shigh)/16 ) / shigh;
+    thisline = ((2 * i + 1) * dhigh) / (2 * shigh);
 
     if ((thisline != lastline)) {      /* copy a line to pic24 */
       pixR = pixG = pixB = pixcnt = lastpix = 0;
-- 
2.17.1

